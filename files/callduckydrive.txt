USE_ECM=true				# Mac and Linux NIC over USB
USE_RNDIS=true				# Windows NIC over USB

USE_RAMDRIVE=true			# Mount the USB storage drive

USB_PID=$(printf "0x%04X" $RANDOM)	# Random PID to raise chance of driver reinstall
USE_HID=true				# Needed for keyboard interface
USE_HID_MOUSE=false			# if true HID mouse will be enabled
USE_RAWHID=false			# if true a raw HID device will be enabled
HID_KEYBOARD_TEST=true			# Waits for the keyboard driver to install

lang="us"				# Language. Stick to US for, eh, U.S.

led_blink 11 # 10 to 20 blinks the red LED.

function onKeyboardUp()
{
sleep 0.5
echo GUI r | duckhid
sleep 0.2
echo STRING cmd.exe | duckhid
echo "RETURN" | duckhid
sleep 0.3
echo STRING CD /D \"%TEMP%\" | duckhid
echo "RETURN" | duckhid
sleep 0.5
echo STRING ERASE MountDuck.bat | duckhid
echo "RETURN" | duckhid
echo STRING COPY CON MountDuck.bat | duckhid
echo "RETURN" | duckhid
echo STRING @echo off | duckhid
echo "RETURN" | duckhid

led_blink 12

# We are switching to outhid because duckhid isn't being consistent on when it is and is not okay with special characters. asked
# to call from terminal and it seems to work, but asked to be called from this file, and all of a sudden it doesn't work. Rage!!

# The way the ducky drive is found is based on the label of the device. While unlikely to happen, if another drive with the same
# label exists in the computer, this will break the script and cause chaos. You may want to change the label of your ducky drive
# to something unique or specific to avoid conflicts, but that decision is entirely at your discretion. Try to avoid long labels
# and try to avoid spaces. Using quotation marks should make spaces work, but findstr is very buggy, and likes to not work well.
# The following codes should not be flagging UAC, but it depends on how paranoid the user has UAC set to. Your mileage may vary.
(
echo "wmic logicaldisk get deviceid, volumename | findstr \"DUCKY\" > \"%TEMP%\out.srp\"";
echo "set /p DriveTemp= < \"%TEMP%\out.srp\"";
echo "set Drive=%DriveTemp:~0,1%";
echo "if \"%Drive%\" == \" \" echo Ducky drive is not mounted. && pause && exit";
echo "cd /d %Drive%:";
echo "if not \"%Drive%\" == \" \" %Drive%:\DUCKY.BAT") | outhid
# If your external drive is mounted, the batch file "DUCKY" will be called from the flash drive to give you access to some tools.
# You should be able to add to this batch file easily referring to %Drive%:\ to get to ducky.
# If your external drive does not mount automatically by Windows, you will need to use Diskpart or Disk Manager to mount it.
# Windows seems to generate a new GUID each time this device is mounted, so we cannot use any static information (other than LABEL)
# to try and mount the image with, and Linux terminal does not like complex scrips with various special characters that CMD
# uses as part of its scripting, so unless you can convince outhid and duckhid to output special characters, you may be in for
# a world of hurt if you plan to automatically locate and mount the drive using batch code.
# With that said, if you can extract enough information on where the drive may be, diskpart should be able to mount to whatever
# drive letter you want it to mount to.


# To do: If the drive is not mounted by Windows, get disk number from diskpart and mount it under CMD looping all drive letters to find the first free one.
# To do: See if these snips of code support Linux variables and move drive name to var to clean up comments.
# To do: See if Ducky USB drive has a static serial number that we might be able to use for mounting purposes.
# To do: Git Gud.

led_blink 13

echo STRING PAUSE | duckhid
echo "RETURN" | duckhid
echo STRING EXIT | duckhid
echo "RETURN" | duckhid
echo "CONTROL" z | duckhid
echo "RETURN" | duckhid
echo STRING CLS | duckhid
echo "RETURN" | duckhid

echo STRING ERASE IPRange.srp | duckhid
echo "RETURN" | duckhid
echo STRING COPY CON IPRange.srp | duckhid
echo "RETURN" | duckhid

led_blink 1

hostname -I | xargs -n1 > /tmp/out

led_blink 14

cat /tmp/out | outhid

echo "CONTROL" z | duckhid
echo "RETURN" | duckhid
echo STRING CLS | duckhid
echo "RETURN" | duckhid
echo STRING MOUNTDUCK | duckhid
echo "RETURN" | duckhid

led_blink 255

}
